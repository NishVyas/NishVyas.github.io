// Below, we import the config file variables and mixins to use in our main scss file
@import "config";
@import "menu";

// The below styles everything
// Makes sure that if there is padding, the height and the width do not get affected
* {
  box-sizing: border-box;
}

body {
  @include background;
  background: $primary-color;
  color: set-text-color($primary-color);
  height: 100%;
  margin: 0;
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  line-height: 1.5;
}

// Headings
h1,
h2,
h3 {
  margin: 0;
  font-weight: 400;
  text-align: center;

  &.lg-heading {
    font-size: 6rem;
  }

  &.sm-heading {
    margin-bottom: 2rem;
    padding: 0.2rem 1rem;
    background: rgba(lighten($primary-color, 2), 0.5);
  }
}

// Links colors are all white with no underline
a {
  color: #fff;
  text-decoration: none;
}

// The header will always stay up top and closest towards user
header {
  position: fixed;
  z-index: 2;
  width: 100%;
}

// This gives my last name a color of yellow
.text-secondary {
  color: $secondary-color;
}

// The below is for everything inside the main tags
main {
  padding: 4rem;
  // height: 100%;
  // Our min height will be 100vh minus the footer size (60px)
  // This makes sure our footer is tuck to the bottom
  min-height: calc(100vh - 60px);
  // This will center our icons as well
  text-align: center;

  // The icons will have a margin and display in a line
  .icons {
    display: inline;
    margin-top: 1rem;

    // Each icon will have padding
    a {
      padding: 0.4rem;

      // The secondary color will phase in with a time of 0.5 seconds when the mouse hovers over top of them
      &:hover {
        color: $secondary-color;
        @include easeOut();
      }
    }
  }

  // The headings will not have a scroll bar,
  &#home {
    overflow: hidden;
    h1 {
      margin-top: 20vh;
    }
  }
}

// Styling for info
.about-info {
  // We will display this class as a grid
  display: grid;
  // Spaces out our grid
  grid-gap: 30px;
  // Below is our visual representation of what we want our page to look like
  grid-template-areas:
    "bioimage bio bio"
    "job1 job2 job3";
  // Below defines the sizing of our columns
  grid-template-columns: repeat(3, 1fr);

  .bio-image {
    // Should match whatever you put in the grid-template-areas
    grid-area: bioimage;
    margin: auto;
    border: $secondary-color 3px solid;
    // Width and max height makes sure the picture covers its entire grid
    width: 100%;
    max-height: 100%;
    // Position my picture to the center
    background-position: center;
    // There will be no repeated images to fill the div
    background-repeat: no-repeat;
    // Size of the image will be 100%
    background-size: 100%;
  }

  .bio {
    grid-area: bio;
    font-size: 1.5rem;
  }

  .job-1 {
    grid-area: job1;
  }

  .job-2 {
    grid-area: job2;
  }

  .job-3 {
    grid-area: job3;
  }

  // General job class styling
  .job {
    // Lighten the background
    background: lighten($primary-color, 5);
    padding: 0.5rem;
    border-bottom: $secondary-color 5px solid;
  }
}

// Work/Projects
.projects {
  display: grid;
  grid-gap: 0.7rem;
  grid-template-columns: repeat(3, 1fr);

  img {
    // Shrinks down image to 100% of its container
    width: 100%;
    border: 3px #fff solid;

    // On hover, image becomes transparent, border color changes, and easeOut method is implemented
    &:hover {
      opacity: 0.5;
      border-color: $secondary-color;
      @include easeOut;
    }
  }
}

// Contact page styling
.boxes {
  display: flex;
  // If size is too small, the links will stack on top of each other
  flex-wrap: wrap;
  justify-content: space-evenly;
  align-items: center;
  margin-top: 1rem;

  div {
    font-size: 2rem;
    border: 3px #fff solid;
    padding: 1.5rem 2.5rem;
    margin-bottom: 0.3rem;
    @include easeOut;

    // On hover
    &:hover {
      // Our padding decreases
      padding: 0.5rem 1.5rem;
      background: $secondary-color;
      color: set-text-color($secondary-color);
      // The spanned text will also change color
      span {
        color: set-text-color($secondary-color);
      }
    }
  }
}

// Button Styles
.btn {
  display: block;
  padding: 0.5rem 1rem;
  border: 0;
  margin-bottom: 0.3rem;

  &:hover {
    background: $secondary-color;
    color: set-text-color($secondary-color);
  }
}

// Button dark and button light extends btn class
.btn-dark {
  @extend .btn;
  background: darken($primary-color, 50);
  color: #fff;
}

.btn-light {
  @extend .btn;
  background: lighten($primary-color, 50);
  color: #333;
}

// Styling for the footer
#main-footer {
  text-align: center;
  padding: 1rem;
  background: darken($primary-color, 10);
  color: set-text-color($primary-color);
  height: 60px;
}

@import "mobile";
